// src/app/add-player/add-player.component.ts
import { Component } from '@angular/core';
import { Router } from '@angular/router';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { Player } from '../../shared/interfaces/player';
import { PlayerService } from '../../shared/services/player-service';

@Component({
  selector: 'app-add-player',
  templateUrl: './add-player.html',
  styleUrls: ['./add-player.css'],
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
  ]
})
export class AddPlayer {
  playerName: string = '';
  selectedEmoji: string = '🚀';
  emojis: string[] = ['🚀', '👾', '✈️', '👩‍✈️', '🛰️', '🧑‍🚀',  '🛸', '☄️', '👽', '🚁', '🔭', '🪐'];

  constructor(
    private router: Router,
    private playerService: PlayerService,
  ) { }

  savePlayer(): void {
    if (this.playerName.trim() === '') {
      alert('Player name cannot be empty!');
      return;
    }

    const newPlayer: Player = {
      id: null, // ID will be generated by the backend
      name: this.playerName.trim(),
      icon: this.selectedEmoji,
      stats: {
        playerScore: 0,
        computerScore: 0,
        playerWins: 0,
        computerWins: 0,
        playerHistory: [],
        computerHistory: [],
        totalRounds: 0,
      }
    };

    this.playerService.createPlayer(newPlayer).subscribe({
      next: (createdPlayer) => {
        this.router.navigate(['/rps-play', createdPlayer.id]);
      },
      error: (error) => {
        if (error.status === 409) {
        } else {
        }
      }
    });
  }

  cancel(): void {
    this.router.navigate(['/']);
  }
}